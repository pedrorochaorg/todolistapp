"use strict";function TodoItem(a,b,c,d,e,f){this.id=a,this.user=b,this.text=c,this.grupo=d,this.status=e,this.updated_at=f,this.editStatus=!1}var apiUrl="/api",socketPath="http://localhost:3000";angular.module("TodoList",["ngAnimate","ngCookies","ngMessages","ngResource","ngSanitize","ngTouch"]),angular.module("TodoList").controller("TodoListCtrl",["$scope","Socket","APIData",function(a,b,c){a.preloader=!0,a.items=[],b.on("message",function(b){switch(console.log(b),b.action){case"create":b.data.grupo==a.grupo&&a.items.push(new TodoItem(b.data.id,b.data.user,b.data.text,b.data.grupo,b.data.status,b.data.updated_at));break;case"update":if(b.data.grupo==a.grupo)for(var c in a.items)a.items[c].id==b.data.id&&(a.items[c]=new TodoItem(b.data.id,b.data.user,b.data.text,b.data.grupo,b.data.status,b.data.updated_at));break;case"delete":for(var c in a.items)a.items[c].id==b.data&&a.items.splice(c,1)}console.log(a.grupo,a.items)}),a.setup=function(b,c){a.userGrupo=c,a.grupo=b},a.editTodoItem=function(a){a.editStatus=!0},a.saveTodoItem=function(a){c.updateTodo(a).then(function(a){a.status&&(a.editStatus=!1)},function(a){})},a.cancelTodoItem=function(a){a.editStatus=!1},a.deleteTodoItem=function(a){c.deleteTodo(a.id)},a.$on("data-ready",function(){a.preloader=!1;for(var b in a.data)a.items.push(new TodoItem(a.data[b].id,a.data[b].user,a.data[b].text,a.data[b].grupo,a.data[b].status,a.data[b].updated_at))})}]),angular.module("TodoList").directive("jsonData",function(){return{restrict:"A",link:function(a,b,c){a[c.ngModel]=JSON.parse(b.html()),a.$broadcast("data-ready")}}}),angular.module("TodoList").service("APIData",["$http","$q",function(a,b){return{getTodos:function(c){var d=apiUrl+"/todos";return null!=c&&void 0!=c&&(d=d+"?grupo="+c),a.get(d).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},createTodo:function(c){return a.post(apiUrl+"/todos",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},updateTodo:function(c){return a.post(apiUrl+"/todos/"+c.id+"/",c).then(function(a){return"object"==typeof a.data?a.data:b.reject(a.data)},function(a){return b.reject(a.data)})},deleteTodo:function(c){return a["delete"](apiUrl+"/todos/"+c+"/").then(function(a){return 204===a.status?!0:b.reject(a.data)},function(a){return b.reject(a.data)})}}}]),angular.module("TodoList").service("Socket",["$rootScope",function(a){var b=io.connect(socketPath);return{on:function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},emit:function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})}}}]),angular.module("TodoList").controller("CreatetodoCtrl",["$scope","$timeout","APIData",function(a,b,c){function d(){a.newTodo=""}a.userGrupo="",a.preloader=!1,a.newTodo="",a.setup=function(b){a.userGrupo=b},a.submitForm=function(e){a.todoForm.$valid&&(a.preloader=!0,c.createTodo({text:e,user:a.userGrupo.id,grupo:a.userGrupo.grupo}).then(function(c){console.log(c),a.preloader=!1,a.newTodo="Todo Created",b(d,5e3)},function(c){a.newTodo="Error",b(d,5e3)}))}}]);